name: Migrations check on MySql 57

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  check_migrations:
    name: check migrations
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        python-version: [ 3.8 ]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y libxmlsec1-dev

    - name: Get pip cache dir
      id: pip-cache-dir
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip dependencies
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/edx/development.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install MySQL 5.7
      run: |
        mkdir ${RUNNER_WORKSPACE}/mysql_packages && cd ${RUNNER_WORKSPACE}/mysql_packages
        sudo apt-get remove --purge *mysql* -y
        sudo rm -rvf /etc/init.d/mysql* /etc/mysql* /var/lib/mysql*
        sudo apt-get install libaio1 libnuma1 libtinfo5 -y
        wget https://cdn.mysql.com/archives/mysql-5.7/mysql-server_5.7.35-1ubuntu18.04_amd64.deb-bundle.tar
        tar -xf mysql-server_5.7*.tar
        sudo DEBIAN_FRONTEND=noninteractive dpkg --install mysql-common_5.7*.deb libmysqlclient*.deb mysql-server_5.7*.deb mysql-client_5.7*.deb mysql-community-server_5.7*.deb mysql-community-client_5.7*.deb

    - name: Ubuntu and sql Versions
      run: |
        lsb_release -a
        mysql -V

    - name: Install Python dependencies
      run: |
        make dev-requirements

    - name: Initiate Services
      run: |
        sudo systemctl start mongod
        sudo /etc/init.d/mysql start
        mongo --version

    - name: Setup databases and users
      run: |
        cat <<EOF | sudo mysql -u root
          CREATE DATABASE IF NOT EXISTS edxapp;
          CREATE USER 'edxapp001' IDENTIFIED BY 'password';
          GRANT ALL ON edxapp.* to 'edxapp001';
          FLUSH PRIVILEGES;
        EOF

        cat <<EOF | mongo
          db.createUser(
            {
              user: "edxapp",
              pwd:  "password",
              roles: [
          	     { role: "readWrite", db: "edxapp" },
                     ]
            }
          )
        EOF

    - name: Install mysqlclient-dev binary
      run: |
        sudo apt-get update
        sudo apt-get install -y libmysqlclient-dev

    - name: Run Tests
      env:
        LMS_CFG: lms/envs/minimal.yml
        # This is from the LMS dir on purpose since we don't need anything different for the CMS yet.
        STUDIO_CFG: lms/envs/minimal.yml
      run: |
        echo "Running the LMS migrations."
        ./manage.py lms migrate
        echo "Running the CMS migrations."
        ./manage.py cms migrate
